name: "GHCR Multi-Arch Build"
description: Performs some preparation to run tests
inputs:
  ADMIN_PAT:
    description: ADMIN_PAT
    required: true
  REPOSITORY:
    description: REPOSITORY
    required: true
  DOCKERFILE:
    description: DOCKERFILE
    required: false
    default: "cicd/Dockerfile"
  TAG:
    description: TAG
    required: false
    default: "latest"
  ARCH:
    description: ARCH
    required: false
    default: "arm64,amd64"
  BUF_TOKEN:
    description: BUF_TOKEN
    required: false
    default: ""
  SHEETJS_TOKEN:
    description: SHEETJS_TOKEN
    required: false
    default: ""
  MUI_LICENSE_KEY:
    description: MUI_LICENSE_KEY
    required: false
    default: ""
  BC_CLIENT_SECRET_V2:
    description: BC_CLIENT_SECRET_V2
    required: false
    default: ""
  BC_SUBSCRIPTION_KEY:
    description: BC_SUBSCRIPTION_KEY
    required: false
    default: ""
runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{ inputs.ARCH }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        config-inline: |
          [worker.oci]
            max-parallelism = 1
        platforms: ${{ inputs.ARCH }}
    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      shell: bash
    - name: Login to Github Packages (GHCR)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: bisonadmin
        password: ${{ inputs.ADMIN_PAT }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        file: ${{ inputs.DOCKERFILE }}
        platforms: ${{ inputs.ARCH }}
        tags: ghcr.io/${{ inputs.REPOSITORY }}:${{ inputs.TAG }}
        ulimit: "nofile=1024000"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=${{ env.NODE_ENV }}
          NODE_AUTH_TOKEN=${{ inputs.ADMIN_PAT }}
          REPOSITORY=${{ inputs.REPOSITORY }}
          BUF_TOKEN=${{ inputs.BUF_TOKEN }}
          SHEETJS_TOKEN=${{ inputs.SHEETJS_TOKEN }}
          MUI_LICENSE_KEY=${{ inputs.MUI_LICENSE_KEY }}
          BC_CLIENT_SECRET_V2=${{ inputs.BC_CLIENT_SECRET_V2 }}
          BC_SUBSCRIPTION_KEY=${{ inputs.BC_SUBSCRIPTION_KEY }}
        secrets: |
          GIT_AUTH_TOKEN=${{ inputs.ADMIN_PAT }}
